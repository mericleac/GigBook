{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/musician-form/musician-form.component.css","webpack:///./src/app/musician-form/musician-form.component.html","webpack:///./src/app/musician-form/musician-form.component.ts","webpack:///./src/app/musician-list/musician-list.component.css","webpack:///./src/app/musician-list/musician-list.component.html","webpack:///./src/app/musician-list/musician-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZsD;AACG;AACS;AAEzB;AACc;AACyB;AACjB;AAE/D,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4FAAqB,EAAC;IACxD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;CACnD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrB7B,mB;;;;;;;;;;;ACAA,w/BAAw/B,qBAAqB,ilB;;;;;;;;;;;;;;;;;;;;;;;;;ACAn+B;AACG;AAO7C;IAII,sBAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAH7C,UAAK,GAAG,MAAM,CAAC;QACf,iBAAY,GAAG,IAAI,CAAC;IAGpB,CAAC;IAED,8BAAO,GAAP;QAAA,iBAWC;QAVG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACrD,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACtB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC7B,IAAI,YAAU,GAAG,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvE,YAAU,CAAC,SAAS,CAAC,UAAC,IAAI;oBACtB,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBACzC,CAAC,CAAC,CAAC;YACP,CAAC;YAAA,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IAlBO,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAKoC,yDAAW;OAJpC,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AACW;AAEA;AACT;AAEF;AACF;AACW;AACG;AACS;AACc;AACA;AACjB;AAsB/D;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,qEAAc;gBACd,+EAAiB;gBACjB,6FAAqB;gBACrB,6FAAqB;gBACrB,4EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,wDAAU;gBACV,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,yDAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrCtB,oCAAoC,8BAA8B,4BAA4B,uPAAuP,yCAAyC,8BAA8B,mBAAmB,qBAAqB,0BAA0B,KAAK,oBAAoB,uBAAuB,KAAK,eAAe,8BAA8B,4BAA4B,mBAAmB,oBAAoB,KAAK,C;;;;;;;;;;;ACAxoB,umB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACO;AAKlD;IACI,qBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC;IAE1C,cAAc;IACd,+BAAS,GAAT,UAAU,IAAI;QACV,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAI;QACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IAED,iCAAW,GAAX,UAAY,QAAQ;QAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,qCAAe,GAAf,UAAgB,EAAE;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;IAvBQ,WAAW;QAHvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAE6B,+DAAU;OAD5B,WAAW,CAwBvB;IAAD,kBAAC;CAAA;AAxBuB;;;;;;;;;;;;ACNxB,0BAA0B,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,qBAAqB,oBAAoB,2BAA2B,KAAK,C;;;;;;;;;;;ACA1Q,6LAA6L,mBAAmB,gEAAgE,cAAc,+PAA+P,iBAAiB,sc;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1d;AACtC;AACL;AACO;AAOhD;IAOI,wBAAoB,YAAyB,EAAU,MAAc,EAAU,GAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QANhG,UAAK,GAAG;YACJ,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACjB,CAAC;QACF,WAAM,GAAG,EAAE,CAAC;IAGZ,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAiBC;QAhBG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzD,UAAU;aACL,SAAS,CAAC,UAAC,IAAI;YACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,CAAC,EACD,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAAA,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IA9BQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;;;SAGxB,CAAC;yCAQoC,yDAAW,EAAkB,sDAAM,EAAe,2DAAY;OAPvF,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B;;;;;;;;;;;;ACV3B,gCAAgC,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,sBAAsB,8BAA8B,4BAA4B,2BAA2B,mBAAmB,uBAAuB,KAAK,wBAAwB,2BAA2B,2BAA2B,oBAAoB,qBAAqB,0BAA0B,+BAA+B,KAAK,mBAAmB,8BAA8B,4BAA4B,mBAAmB,6BAA6B,KAAK,uBAAuB,qBAAqB,qBAAqB,uBAAuB,wBAAwB,KAAK,6BAA6B,qBAAqB,KAAK,uBAAuB,8BAA8B,4BAA4B,mBAAmB,KAAK,yBAAyB,oBAAoB,8BAA8B,4BAA4B,KAAK,+BAA+B,wBAAwB,KAAK,C;;;;;;;;;;;ACArlC,qSAAqS,8CAA8C,mHAAmH,gBAAgB,iMAAiM,4CAA4C,sYAAsY,eAAe,iRAAiR,gBAAgB,2RAA2R,mBAAmB,sXAAsX,iBAAiB,IAAI,mBAAmB,IAAI,8BAA8B,qyD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArjE;AACJ;AACL;AACO;AAOhD;IAkBI,+BAAoB,YAAyB,EAAU,MAAc,EAAU,GAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QAjBhG,aAAQ,GAAG,gFAAgF,CAAC;QAC5F,aAAQ,GAAG;YACP,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,EAAE;SAClB;QACD,eAAU,GAAG;YACT,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;YACZ,eAAe,EAAE,IAAI;SACxB;QACD,WAAM,GAAG,uCAAuC,CAAC;QACjD,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAAG,EAAE,CAAC;IAEwF,CAAC;IAErG,wCAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;IACpD,CAAC;IAED,2CAAW,GAAX,UAAY,KAAK;QAAjB,iBAgBC;QAfG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,MAAM,GAAG,UAAC,KAAK;gBAClB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACvC,KAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACpD,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,yBAAyB,CAAC;QACrD,CAAC;IACL,CAAC;IAED,6CAAa,GAAb;QACI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG;YACd,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;YACZ,eAAe,EAAE,IAAI;SACxB,CAAC;IACN,CAAC;IAED,gDAAgB,GAAhB,UAAiB,IAAI;QACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;IACL,CAAC;IAED,2CAAW,GAAX;QAAA,iBAgBC;QAfG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9D,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC7B,KAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACvC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAAA,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IA3EQ,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;;SAGhC,CAAC;yCAmBoC,yDAAW,EAAkB,sDAAM,EAAe,2DAAY;OAlBvF,qBAAqB,CA4EjC;IAAD,4BAAC;CAAA;AA5EiC;;;;;;;;;;;;ACVlC,gCAAgC,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,sBAAsB,8BAA8B,4BAA4B,2BAA2B,mBAAmB,KAAK,mBAAmB,8BAA8B,4BAA4B,mBAAmB,KAAK,C;;;;;;;;;;;ACA/a,wD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,mB;;;;;;;;;;;ACAA,+DAA+D,QAAQ,6KAA6K,uDAAuD,kFAAkF,iBAAiB,yBAAyB,oBAAoB,uDAAuD,qBAAqB,sGAAsG,aAAa,IAAI,eAAe,IAAI,wBAAwB,kU;;;;;;;;;;;;;;;;;;;;;;;;;ACAvnB;AACF;AAOhD;IAII,0BAAoB,GAAiB;QAAjB,QAAG,GAAH,GAAG,CAAc;QAHrC,SAAI,GAAG,IAAI,CAAC;QACZ,aAAQ,GAAG,IAAI,CAAC;IAEyB,CAAC;IAE1C,mCAAQ,GAAR;QACI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACnC,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,IAAI,GAAG,yBAAuB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,MAAG,CAAC;YACrE,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;QAC3C,CAAC;IACL,CAAC;IApBQ,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;SAG1B,CAAC;yCAK2B,2DAAY;OAJ5B,gBAAgB,CAsB5B;IAAD,uBAAC;CAAA;AAtB4B;;;;;;;;;;;;ACR7B,0BAA0B,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,qBAAqB,oBAAoB,2BAA2B,KAAK,C;;;;;;;;;;;ACA1Q,6LAA6L,eAAe,uPAAuP,gBAAgB,8PAA8P,mBAAmB,iRAAiR,0BAA0B,oY;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA79B;AACJ;AACL;AACO;AAOhD;IASI,2BAAoB,YAAyB,EAAU,MAAc,EAAU,GAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QARhG,SAAI,GAAG;YACH,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE,IAAI;SACxB;QACD,WAAM,GAAG,EAAE,CAAC;IAEwF,CAAC;IAErG,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAeC;QAdG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,sBAAsB;YACtB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC,EACD,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAAA,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IA7BQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;yCAUoC,yDAAW,EAAkB,sDAAM,EAAe,2DAAY;OATvF,iBAAiB,CA8B7B;IAAD,wBAAC;CAAA;AA9B6B;;;;;;;;;;;;;ACV9B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MusicianFormComponent } from './musician-form/musician-form.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n    { path: \"login\", component: LoginComponent },\n    { path: \"register\", component: RegisterComponent },\n    { path: \"\", component: HomeComponent },\n    { path: \"addMusician\", component: MusicianFormComponent},\n    { path: \"profile\", component: ProfileComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GigBook</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home</a></li>\\n            <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/musicians']\\\">Browse Musicians</a></li>\\n            <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/gigs']\\\">My Gigs</a></li>\\n            <li *ngIf=\\\"loggedInUser === null\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">My Profile</a></li>\\n            <li *ngIf=\\\"loggedInUser !== null\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">{{ loggedInUser.name }}'s Profile</a></li>\\n        </ul>\\n        <a *ngIf=\\\"loggedInUser === null\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login/Register</a>\\n        <a *ngIf=\\\"loggedInUser !== null\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/addMusician']\\\">Register as a musician</a>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Find Musicians\\\">\\n            <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'main';\n    loggedInUser = null;\n\n    constructor(private _httpService: HttpService) {\n    }\n\n    getUser() {\n        let observable = this._httpService.getLoggedInUser();\n        observable.subscribe((data) => {\n            this.loggedInUser = data;\n            if (data['musicianId'] != null) {\n                let observable = this._httpService.getMusicianById(data['musicianId']);\n                observable.subscribe((data) => {\n                    this.loggedInUser['musician'] = data;\n                });\n            };\n        });\n    };\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MusicianFormComponent } from './musician-form/musician-form.component';\nimport { MusicianListComponent } from './musician-list/musician-list.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    MusicianFormComponent,\n    MusicianListComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".jumbotron-fluid {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    background: url(\\\"http://auserwirth.info/wp-content/uploads/2018/03/minimalist-animal-wallpapers-for-desktops-3-i-simple-background-minimalism-cat-drawing-animals-sitting-blue-background-wallpapers-hd-desktop-and-mobile-backgrounds.jpg\\\");\\r\\n    background-position: left bottom;\\r\\n    background-size: 100%;\\r\\n    width: 60%;\\r\\n    height: 50vh;\\r\\n    padding-left: 20%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    padding: 10% 0;\\r\\n}\\r\\n\\r\\n.info {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 40%;\\r\\n    padding: 5%;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n        <h1 class=\\\"display-4\\\">Welcome to GigBook!</h1>\\n        <p class=\\\"lead\\\">The popular booking site for hiring musicians</p>\\n    </div>\\n</div>\\n<div class=\\\"info\\\">\\n    <h2>Because everyone could use a little music</h2>\\n    <p>GigBook is a user friendly booking website that promotes local musicians. Our algorithms are designed to give starting musicians a boost while providing our clients with music they will love.</p>\\n</div>\\n\\n<h2>Featured Musicians:</h2>\\n<!-- A list of musicians that are just starting out -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n    constructor(private _http: HttpClient) { }\n\n    // user routes\n    loginUser(user) {\n        console.log(\"In service\");\n        return this._http.post(\"/users/Login\", user);\n    }\n\n    registerUser(user) {\n        return this._http.post(\"/users\", user);\n    }\n\n    getLoggedInUser() {\n        return this._http.get(\"/users/loggedIn\");\n    }\n\n    addMusician(musician) {\n        return this._http.post(\"/musicians\", musician);\n    }\n\n    getMusicianById(id) {\n        return this._http.get(\"/musicians/\" + id);\n    }\n}\n","module.exports = \".login {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 35%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.login .btn {\\r\\n    width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container login\\\">\\n    <h2>Login</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"Login()\\\">\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.loginError\\\">{{errors.loginError}}</span>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Email\\\">{{errors.Email}}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"Email\\\" [(ngModel)]=\\\"login.email\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Password\\\">{{errors.Password}}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"Password\\\" [(ngModel)]=\\\"login.password\\\">\\n            <small class=\\\"form-text text-muted\\\"><a>Forgot your password?</a></small>\\n        </div>\\n        <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Log in\\\">\\n    </form>\\n    <a [routerLink]=\\\"['/register']\\\">Need to register?</a>\\n</div>\"","import { Component, OnInit, Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    login = {\n        Email: null,\n        Password: null\n    };\n    errors = {};\n\n    constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) {\n    }\n\n    ngOnInit() {\n    }\n\n    Login() {\n        console.log(this.login);\n        let observable = this._httpService.loginUser(this.login);\n        observable\n            .subscribe((data) => {\n                console.log(data);\n                console.log(\"HERE!!!!!\");\n                this.router.navigate([\"\"]);\n            },\n            (err) => {\n                console.log(err['error']);\n                let errors = Object.keys(err['error']);\n                for (let i = 0; i < errors.length; i++) {\n                    this.errors[errors[i]] = err['error'][errors[i]][0];\n                };\n                console.log(this.errors);\n            });\n    }\n}\n","module.exports = \".newMusician {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 70%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.imageUpload {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    width: 40%;\\r\\n    padding: 3% 5%;\\r\\n}\\r\\n\\r\\n.image-cropper {\\r\\n    position: relative;\\r\\n    border-radius: 50%;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    padding-top: 100%;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.formInfo {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 60%;\\r\\n    padding: 3% 0% 3% 5%;\\r\\n}\\r\\n\\r\\na.btn-success {\\r\\n    color: white;\\r\\n    height: auto;\\r\\n    line-height: 2;\\r\\n    margin-top: 3vh;\\r\\n}\\r\\n\\r\\na.btn-success:hover {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.Instrument p {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 60%;\\r\\n}\\r\\n\\r\\n.Instrument img {\\r\\n    height: 2vh;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.Instrument img:hover {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"container newMusician\\\">\\n    <h2>Register as a Musician</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"AddMusician()\\\">\\n        <div class=\\\"imageUpload\\\">\\n            <h3>Add a Profile Picture</h3>\\n            <div class=\\\"image-cropper\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + ImageUrl + ')' }\\\"></div>\\n            <label>Upload an image:</label>\\n            <span *ngIf=\\\"errors.Image\\\" class=\\\"error\\\">{{ errors.Image }}</span>\\n            <div class=\\\"input-group\\\">\\n                <label class=\\\"input-group-btn\\\">\\n                    <span class=\\\"btn btn-warning\\\">\\n                        Browse&hellip; <input type=\\\"file\\\" style=\\\"display: none;\\\" multiple name=\\\"ImageUrl\\\" [(ngModel)]=\\\"Musician.ImageUrl\\\" (change)=\\\"UpdateImage($event)\\\">\\n                    </span>\\n                </label>\\n                <input *ngIf=\\\"ImageUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly name=\\\"ImageUrl\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"formInfo\\\">\\n            <span class=\\\"error\\\" *ngIf=\\\"errors.Name\\\">{{ errors.Name }}</span>\\n            <div class=\\\"form-group\\\">\\n                <label>Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" [(ngModel)]=\\\"Musician.Name\\\">\\n            </div>\\n            <span class=\\\"error\\\" *ngIf=\\\"errors.Summary\\\">{{ errors.Email }}</span>\\n            <div class=\\\"form-group\\\">\\n                <label>Summary</label>\\n                <textarea class=\\\"form-control\\\" name=\\\"Summary\\\" [(ngModel)]=\\\"Musician.Summary\\\"></textarea>\\n            </div>\\n            <span class=\\\"error\\\" *ngIf=\\\"errors.Location\\\">{{ errors.Location }}</span>\\n            <div class=\\\"form-group\\\">\\n                <label>Location</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Location\\\" [(ngModel)]=\\\"Musician.Location\\\">\\n            </div>\\n            <h4>Add Instruments:</h4>\\n            <div *ngFor=\\\"let instrument of Musician.Instruments\\\" class=\\\"Instrument\\\">\\n                <p>{{instrument.Name}}, {{instrument.Family}}: {{ instrument.YearsExperience }} years</p><img src=\\\"https://cdn0.iconfinder.com/data/icons/basic-ui-elements-plain/385/010_x-512.png\\\" (click)=\\\"DeleteInstrument(instrument)\\\">\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label>Name</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"InstrumentName\\\" [(ngModel)]=\\\"Instrument.Name\\\" placeholder=\\\"Name\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label>Family</label>\\n                    <select class=\\\"form-control\\\" name=\\\"InstrumentFamily\\\" [(ngModel)]=\\\"Instrument.Family\\\" placeholder=\\\"Family\\\">\\n                        <option value=\\\"Woodwind\\\">Woodwind</option>\\n                        <option value=\\\"Brass\\\">Brass</option>\\n                        <option value=\\\"Percussion\\\">Percussion</option>\\n                        <option value=\\\"String\\\">String</option>\\n                        <option value=\\\"Keyboard\\\">Keyboard</option>\\n                        <option value=\\\"Vocal\\\">Vocal</option>\\n                        <option value=\\\"Other\\\">Other</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label>Years of Experience</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"YearsExperience\\\" [(ngModel)]=\\\"Instrument.YearsExperience\\\" placeholder=\\\"Years of Experience\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-1\\\">\\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"AddInstrument()\\\">Add</a>\\n                </div>\\n            </div>\\n            <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Register\\\">\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-musician-form',\n    templateUrl: './musician-form.component.html',\n    styleUrls: ['./musician-form.component.css']\n})\nexport class MusicianFormComponent implements OnInit {\n    ImageUrl = \"http://www.epsomps.vic.edu.au/wp-content/uploads/2016/09/512x512-1-300x300.png\";\n    Musician = {\n        Name: null,\n        Summary: null,\n        Location: null,\n        ImageUrl: null,\n        Instruments: []\n    }\n    Instrument = {\n        Name: null,\n        Family: null,\n        YearsExperience: null\n    }\n    urlReg = /()\\w+(\\.)+(jpg|png|jpeg|JPG|JPEG|PNG)/;\n    urlMessage = null;\n    errors = {};\n\n    constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) { }\n\n    ngOnInit() {\n        this.Musician.Name = this.app.loggedInUser.name;\n    }\n\n    UpdateImage(event) {\n        console.log(\"HERE!\");\n        if (this.urlReg.test(this.Musician.ImageUrl)) {\n            console.log(\"Good\");\n            console.log(event)\n            var reader = new FileReader();\n            reader.readAsDataURL(event.target.files[0]);\n            reader.onload = (event) => {\n                this.ImageUrl = event.target['result'];\n                this.Musician.ImageUrl = event.target['result'];\n            }\n        }\n        else {\n            console.log(\"Invalid\");\n            this.errors['Image'] = \"Not a valid image file.\";\n        }\n    }\n\n    AddInstrument() {\n        this.Musician.Instruments.push(this.Instrument);\n        this.Instrument = {\n            Name: null,\n            Family: null,\n            YearsExperience: null\n        };\n    }\n\n    DeleteInstrument(data) {\n        for (let i = 0; i < this.Musician.Instruments.length; i++) {\n            if (this.Musician.Instruments[i] === data) {\n                this.Musician.Instruments.splice(i, 1);\n            }\n        }\n    }\n\n    AddMusician() {\n        let observable = this._httpService.addMusician(this.Musician);\n        observable.subscribe((data) => {\n            console.log(data);\n            if (data['MusicianId'] != null) {\n                this.app.getUser();\n                this.router.navigate([\"/profile\"]);\n            }\n        },\n        (err) => {\n            console.log(err['error']);\n            let errors = Object.keys(err['error']);\n            for (let i = 0; i < errors.length; i++) {\n                this.errors[errors[i]] = err['error'][errors[i]][0];\n            }; \n        })\n    }\n}\n","module.exports = \".newMusician {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 60%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.imageUpload {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    width: 40%;\\r\\n}\\r\\n\\r\\n.formInfo {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 60%;\\r\\n}\"","module.exports = \"<p>\\n    Musician List works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-musician-list',\n  templateUrl: './musician-list.component.html',\n  styleUrls: ['./musician-list.component.css']\n})\nexport class MusicianListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container profile\\\">\\n    <h2>{{ Name }}</h2>\\n    <hr class=\\\"my-4\\\">\\n    <div *ngIf=\\\"Musician != null\\\" class=\\\"musician\\\">\\n        <div class=\\\"left\\\">\\n            <div class=\\\"image-cropper\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + Musician.ImageUrl + ')' }\\\"></div>\\n        </div>\\n        <div class=\\\"right\\\">\\n            <h4>About {{ Musician.Name }}:</h4>\\n            <p>{{ Musician.Summary }}</p>\\n            <h4>Location:</h4>\\n            <p>{{ Musician.Location }}</p>\\n            <h4>Instruments:</h4>\\n            <p *ngFor=\\\"let inst of Musician.Instruments\\\">{{ inst.Name }}, {{ inst.Family }} ({{ inst.YearsExperience }} years of experience)</p>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"Musician == null\\\">\\n        <p>You are not registered as a musician. Click <a [routerLink]=\\\"['/addMusician']\\\">here</a> to register as a musician now or <a href=\\\"['/addMusicians']\\\">here</a> to browse all current musicians</p>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n    Name = null;\n    Musician = null;\n\n    constructor(private app: AppComponent) { }\n\n    ngOnInit() {\n        console.log(this.app.loggedInUser);\n        if (this.app.loggedInUser.Musician != null) {\n            this.Musician = this.app.loggedInUser.Musician;\n            if (this.Musician.Name == this.app.loggedInUser.Name) {\n                this.Name = this.Musician.Name;\n            }\n            else {\n                this.Name = `this.Musician.Name (${this.app.loggedInUser.Name})`;\n            }\n        }\n        else {\n            this.Name = this.app.loggedInUser.Name;\n        }\n    }\n\n}\n","module.exports = \".login {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 35%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.login .btn {\\r\\n    width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container login\\\">\\n    <h2>Register</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"Register()\\\">\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Name\\\">{{ errors.Name }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" [(ngModel)]=\\\"user.Name\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Email\\\">{{ errors.Email }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"Email\\\" [(ngModel)]=\\\"user.Email\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Password\\\">{{ errors.Password }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"Password\\\" [(ngModel)]=\\\"user.Password\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.ConfirmPassword\\\">{{ errors.ConfirmPassword }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Confirm Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"ConfirmPassword\\\" [(ngModel)]=\\\"user.ConfirmPassword\\\">\\n        </div>\\n        <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Register\\\">\\n    </form>\\n    <a [routerLink]=\\\"['/login']\\\">Already registered?</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    user = {\n        Name: null,\n        Email: null,\n        Password: null,\n        ConfirmPassword: null\n    }\n    errors = {};\n\n    constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) { }\n\n    ngOnInit() {\n    }\n\n    Register() {\n        let observable = this._httpService.registerUser(this.user);\n        observable.subscribe((data) => {\n            console.log(data);\n            // this.app.getUser();\n            this.router.navigate([\"/\"]);\n        },\n        (err) => {\n            console.log(err['error']);\n            let errors = Object.keys(err['error']);\n            for (let i = 0; i < errors.length; i++) {\n                this.errors[errors[i]] = err['error'][errors[i]][0];\n            };\n            console.log(this.errors);\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}
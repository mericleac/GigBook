{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    { path: \"login\", component: LoginComponent },\n    { path: \"register\", component: RegisterComponent },\n    { path: \"\", component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GigBook</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home</a></li>\\n            <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/musicians']\\\">Browse Musicians</a></li>\\n            <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/gigs']\\\">My Gigs</a></li>\\n            <li *ngIf=\\\"loggedInUser === null\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">My Profile</a></li>\\n            <li *ngIf=\\\"loggedInUser !== null\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">{{ loggedInUser.name }}'s Profile</a></li>\\n        </ul>\\n        <a *ngIf=\\\"loggedInUser === null\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login/Register</a>\\n        <a *ngIf=\\\"loggedInUser !== null\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/addMusician']\\\">Register as a musician</a>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Find Musicians\\\">\\n            <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'main';\n  loggedInUser = null;\n\n  constructor() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".jumbotron-fluid {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    background: url(\\\"http://auserwirth.info/wp-content/uploads/2018/03/minimalist-animal-wallpapers-for-desktops-3-i-simple-background-minimalism-cat-drawing-animals-sitting-blue-background-wallpapers-hd-desktop-and-mobile-backgrounds.jpg\\\");\\r\\n    background-position: left bottom;\\r\\n    background-size: 100%;\\r\\n    width: 60%;\\r\\n    height: 50vh;\\r\\n    padding-left: 20%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    padding: 10% 0;\\r\\n}\\r\\n\\r\\n.info {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 40%;\\r\\n    padding: 5%;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron-fluid\\\">\\n    <div class=\\\"container\\\">\\n        <h1 class=\\\"display-4\\\">Welcome to GigBook!</h1>\\n        <p class=\\\"lead\\\">The popular booking site for hiring musicians</p>\\n    </div>\\n</div>\\n<div class=\\\"info\\\">\\n    <h2>Because everyone could use a little music</h2>\\n    <p>GigBook is a user friendly booking website that promotes local musicians. Our algorithms are designed to give starting musicians a boost while providing our clients with music they will love.</p>\\n</div>\\n\\n<h2>Featured Musicians:</h2>\\n<!-- A list of musicians that are just starting out -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) {}\n\n  // user routes\n  loginUser(user) {\n      console.log(\"In service\");\n      return this._http.post(\"/users/Login\", user);\n  }\n\n  registerUser(user) {\n      return this._http.post(\"/users\", user);\n  }\n\n  getLoggedInUser() {\n      return this._http.get(\"/users/loggedIn\");\n  }\n}\n","module.exports = \".login {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 35%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.login .btn {\\r\\n    width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container login\\\">\\n    <h2>Login</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"Login()\\\">\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.loginError\\\">{{errors.loginError}}</span>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Email\\\">{{errors.Email}}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"Email\\\" [(ngModel)]=\\\"login.email\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Password\\\">{{errors.Password}}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"Password\\\" [(ngModel)]=\\\"login.password\\\">\\n            <small class=\\\"form-text text-muted\\\"><a>Forgot your password?</a></small>\\n        </div>\\n        <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Log in\\\">\\n    </form>\\n    <a [routerLink]=\\\"['/register']\\\">Need to register?</a>\\n</div>\"","import { Component, OnInit, Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  login = {\n      Email: null,\n      Password: null\n  };\n  errors = {};\n\n  constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) {\n  }\n\n  ngOnInit() {\n  }\n  \n  Login() {\n      console.log(this.login);\n      let observable = this._httpService.loginUser(this.login);\n      observable\n        .subscribe((data) => {\n            console.log(data);\n            console.log(\"HERE!!!!!\");\n            if (data[\"userId\"] != null) {\n              this.app.loggedInUser = data;\n              this.router.navigate([\"\"]);\n            }\n        },\n        (err) => {\n            console.log(err['error']);\n            let errors = Object.keys(err['error']);\n            for (let i = 0; i < errors.length; i++){\n                this.errors[errors[i]] = err['error'][errors[i]][0];\n            };\n            console.log(this.errors);\n        });\n  }\n}\n","module.exports = \".login {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 35%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.login .btn {\\r\\n    width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container login\\\">\\n    <h2>Register</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"Register()\\\">\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Name\\\">{{ errors.Name }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" [(ngModel)]=\\\"user.Name\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Email\\\">{{ errors.Email }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"Email\\\" [(ngModel)]=\\\"user.Email\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Password\\\">{{ errors.Password }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"Password\\\" [(ngModel)]=\\\"user.Password\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.ConfirmPassword\\\">{{ errors.ConfirmPassword }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Confirm Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"ConfirmPassword\\\" [(ngModel)]=\\\"user.ConfirmPassword\\\">\\n        </div>\\n        <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Register\\\">\\n    </form>\\n    <a [routerLink]=\\\"['/login']\\\">Already registered?</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user = {\n      Name: null,\n      Email: null,\n      Password: null,\n      ConfirmPassword: null\n  }\n  errors = {};\n\n  constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) { }\n\n  ngOnInit() {\n  }\n\n  Register() {\n    let observable = this._httpService.registerUser(this.user);\n    observable.subscribe((data) => {\n        console.log(data);\n        if (data[\"userId\"] != null) {\n            this.app.loggedInUser = data;\n            this.router.navigate([\"/\"]);\n        }\n    },\n    (err) => {\n        console.log(err['error']);\n        let errors = Object.keys(err['error']);\n        for (let i = 0; i < errors.length; i++){\n            this.errors[errors[i]] = err['error'][errors[i]][0];\n        };\n        console.log(this.errors);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}
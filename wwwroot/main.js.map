{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/gig-list/gig-list.component.css","webpack:///./src/app/gig-list/gig-list.component.html","webpack:///./src/app/gig-list/gig-list.component.ts","webpack:///./src/app/gig-request/gig-request.component.css","webpack:///./src/app/gig-request/gig-request.component.html","webpack:///./src/app/gig-request/gig-request.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/musician-form/musician-form.component.css","webpack:///./src/app/musician-form/musician-form.component.html","webpack:///./src/app/musician-form/musician-form.component.ts","webpack:///./src/app/musician-list/musician-list.component.css","webpack:///./src/app/musician-list/musician-list.component.html","webpack:///./src/app/musician-list/musician-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZsD;AACG;AACS;AAEzB;AACc;AACyB;AACjB;AACiB;AACN;AACT;AAEjE,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4FAAqB,EAAC;IACxD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,2EAAgB,EAAE;IACpD,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,sFAAmB,EAAE;IACjE,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAC7D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAqB,EAAE;IACvD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAgB,EAAE;IAC7C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAE;CACzD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9B7B,2BAA2B,sDAAsD,KAAK,C;;;;;;;;;;;ACAtF,w/BAAw/B,qBAAqB,mpB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn+B;AACG;AACJ;AAOzC;IAKI,sBAAoB,YAAyB,EAAU,MAAc;QAAjD,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJrE,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAG,MAAM,CAAC;QACf,iBAAY,GAAG,IAAI,CAAC;IAGpB,CAAC;IAED,8BAAO,GAAP;QAAA,iBAMC;QALG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACrD,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACtB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IAEF,sCAAe,GAAf;QACI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpD,CAAC;IAnBQ,YAAY;QALxB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAMoC,yDAAW,EAAkB,sDAAM;OAL5D,YAAY,CAoBxB;IAAD,mBAAC;CAAA;AApBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACI;AACW;AAEA;AACT;AAEF;AACF;AACW;AACG;AACS;AACc;AACA;AACjB;AACW;AACT;AAwBjE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,qEAAc;gBACd,+EAAiB;gBACjB,6FAAqB;gBACrB,6FAAqB;gBACrB,4EAAgB;gBAChB,uFAAmB;gBACnB,8EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,wDAAU;gBACV,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,yDAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzCtB,yBAAyB,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,C;;;;;;;;;;;ACAhM,oPAAoP,2BAA2B,kCAAkC,aAAa,sCAAsC,eAAe,uCAAuC,YAAY,64BAA64B,2BAA2B,8BAA8B,aAAa,kCAAkC,eAAe,mCAAmC,YAAY,wsB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv6C;AACJ;AACE;AACP;AAOzC;IAKI,0BAAoB,YAAyB,EAAU,MAAc,EAAU,GAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QAJhG,SAAI,GAAG,IAAI,CAAC;QACZ,eAAU,GAAG,EAAE,CAAC;QAChB,iBAAY,GAAG,EAAE,CAAC;IAEkF,CAAC;IAErG,mCAAQ,GAAR;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,kCAAO,GAAP;QAAA,iBAeC;QAdG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAC/C,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACnC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oBACjC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;YACL,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAY,GAAZ,UAAa,EAAE;QAAf,iBAsBC;QArBG,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,IAAI,EAAE,EAAb,CAAa,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,OAAO,GAAS,MAAO,CAAC,cAAc,CAAC,SAAS,CAAC;YACjD,GAAG,EAAE,kCAAkC;YACvC,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,eAAK;gBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;gBAChF,UAAU,CAAC,SAAS,CAAC,cAAI;oBACrB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YACP,CAAC;SACJ,CAAC,CAAC;QAEH,OAAO,CAAC,IAAI,CAAC;YACL,IAAI,EAAE,SAAS;YACf,WAAW,EAAE,aAAa;YAC1B,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG;SAC9C,CAAC,CAAC;IACX,CAAC;IAnDQ,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;yCAMoC,yDAAW,EAAkB,sDAAM,EAAe,2DAAY;OALvF,gBAAgB,CAqD5B;IAAD,uBAAC;CAAA;AArD4B;;;;;;;;;;;;ACV7B,6BAA6B,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,C;;;;;;;;;;;ACApM,sEAAsE,yBAAyB,2GAA2G,gBAAgB,4FAA4F,aAAa,iwCAAiwC,QAAQ,gSAAgS,aAAa,4RAA4R,WAAW,k4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9mE;AACJ;AACW;AAChB;AACO;AAOhD;IAgBI,6BAAoB,YAAyB,EAAU,MAAsB,EAAU,MAAc,EAAU,GAAiB;QAA5G,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QAfhI,SAAI,GAAG,IAAI,CAAC;QACZ,aAAQ,GAAG,IAAI,CAAC;QAChB,YAAO,GAAG;YACN,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,GAAG,EAAE,IAAI;SACZ;QACD,SAAI,GAAG,IAAI;QACX,cAAS,GAAG,IAAI;QAChB,YAAO,GAAG,IAAI;QAEd,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAG,KAAK,CAAC;IAEqH,CAAC;IAErI,sCAAQ,GAAR;QAAA,iBAwCC;QAvCG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YACxC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC7B,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1B,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5D,UAAU,CAAC,SAAS,CAAC,cAAI;oBACrB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;oBAChB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;oBACtB,EAAE,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,UAAU,IAAI,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACtC,KAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC;oBACpC,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,KAAI,CAAC,MAAM,GAAG,eAAe,CAAC;oBAClC,CAAC;oBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;oBACjC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC/C,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBACpD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACjE,UAAU,CAAC,SAAS,CAAC,cAAI;oBACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,GAAG,GAAG;oBACP,OAAO,EAAE,IAAI;oBACb,SAAS,EAAE,IAAI;oBACf,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,IAAI;iBACf;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAM,GAAN;QAAA,iBAwBC;QAvBG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,MAAM,CAAC;QACX,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,OAAO,GAAM,IAAI,CAAC,OAAO,CAAC,MAAM,SAAI,IAAI,CAAC,OAAO,CAAC,IAAI,UAAK,IAAI,CAAC,OAAO,CAAC,KAAK,SAAI,IAAI,CAAC,OAAO,CAAC,GAAK,CAAC;QAC5G,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAChE,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACtE,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACA,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAAA,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED,uCAAS,GAAT;QAAA,iBAMC;QALG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvD,UAAU,CAAC,SAAS,CAAC,cAAI;YACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC;IACN,CAAC;IAED,wCAAU,GAAV,UAAW,IAAI;QACX,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACT,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,iBAAiB,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACnB,CAAC;QACD,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,wCAAU,GAAV,UAAW,IAAI;QACX,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QACpB,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACT,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACT,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,iBAAiB,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IArIQ,mBAAmB;QAL/B,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;;;SAG9B,CAAC;yCAiBoC,yDAAW,EAAkB,8DAAc,EAAkB,sDAAM,EAAe,2DAAY;OAhBvH,mBAAmB,CAsI/B;IAAD,0BAAC;CAAA;AAtI+B;;;;;;;;;;;;ACXhC,uBAAuB,mBAAmB,8BAA8B,4BAA4B,KAAK,gBAAgB,mBAAmB,8BAA8B,4BAA4B,0BAA0B,wBAAwB,KAAK,mBAAmB,0BAA0B,KAAK,kBAAkB,0BAA0B,KAAK,oBAAoB,uBAAuB,KAAK,eAAe,8BAA8B,4BAA4B,mBAAmB,oBAAoB,KAAK,sBAAsB,yBAAyB,KAAK,C;;;;;;;;;;;ACAzjB,se;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACO;AAKlD;IACI,qBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC;IAE1C,cAAc;IACd,+BAAS,GAAT,UAAU,IAAI;QACV,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAI;QACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IAED,iCAAW,GAAX,UAAY,QAAQ;QAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,qCAAe,GAAf,UAAgB,EAAE;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,qCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC;IAED,qCAAe,GAAf,UAAgB,MAAM;QAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,oCAAc,GAAd,UAAe,QAAQ;QACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IAClD,CAAC;IAED,4BAAM,GAAN,UAAO,EAAE,EAAE,GAAG;QACV,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAS,GAAT,UAAU,GAAG;QACT,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QACN,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,+BAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,oCAAc,GAAd,UAAe,EAAE;QACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,oCAAc,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAC/C,CAAC;IA5DQ,WAAW;QAHvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAE6B,+DAAU;OAD5B,WAAW,CA6DvB;IAAD,kBAAC;CAAA;AA7DuB;;;;;;;;;;;;ACNxB,0BAA0B,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,qBAAqB,oBAAoB,2BAA2B,KAAK,C;;;;;;;;;;;ACA1Q,6LAA6L,mBAAmB,gEAAgE,cAAc,+PAA+P,iBAAiB,sc;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1d;AACtC;AACL;AACO;AAOhD;IAOI,wBAAoB,YAAyB,EAAU,MAAc,EAAU,GAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QANhG,UAAK,GAAG;YACJ,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACjB,CAAC;QACF,WAAM,GAAG,EAAE,CAAC;IAGZ,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAiBC;QAhBG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzD,UAAU;aACL,SAAS,CAAC,UAAC,IAAI;YACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,CAAC,EACD,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAAA,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IA9BQ,cAAc;QAL1B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;;;SAGxB,CAAC;yCAQoC,yDAAW,EAAkB,sDAAM,EAAe,2DAAY;OAPvF,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B;;;;;;;;;;;;ACV3B,gCAAgC,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,sBAAsB,8BAA8B,4BAA4B,2BAA2B,mBAAmB,uBAAuB,KAAK,wBAAwB,2BAA2B,2BAA2B,oBAAoB,qBAAqB,0BAA0B,+BAA+B,KAAK,mBAAmB,8BAA8B,4BAA4B,mBAAmB,6BAA6B,KAAK,uBAAuB,qBAAqB,qBAAqB,uBAAuB,wBAAwB,KAAK,6BAA6B,qBAAqB,KAAK,uBAAuB,8BAA8B,4BAA4B,mBAAmB,KAAK,yBAAyB,oBAAoB,8BAA8B,4BAA4B,KAAK,+BAA+B,wBAAwB,KAAK,C;;;;;;;;;;;ACArlC,qSAAqS,8CAA8C,mHAAmH,gBAAgB,iMAAiM,4CAA4C,sYAAsY,eAAe,iRAAiR,gBAAgB,2RAA2R,mBAAmB,wUAAwU,sBAAsB,wHAAwH,iBAAiB,IAAI,mBAAmB,IAAI,8BAA8B,svDAAsvD,UAAU,yC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr5H;AACJ;AACL;AACO;AAOhD;IAmBI,+BAAoB,YAAyB,EAAU,MAAc,EAAU,GAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QAlBhG,aAAQ,GAAG,gFAAgF,CAAC;QAC5F,aAAQ,GAAG;YACP,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,EAAE;SAClB;QACD,eAAU,GAAG;YACT,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;YACZ,eAAe,EAAE,IAAI;SACxB;QACD,WAAM,GAAG,uCAAuC,CAAC;QACjD,eAAU,GAAG,IAAI,CAAC;QAClB,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAG,UAAU,CAAC;IAEgF,CAAC;IAErG,wCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC;YAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC/C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC;QACpD,CAAC;IACL,CAAC;IAED,2CAAW,GAAX,UAAY,KAAK;QAAjB,iBAgBC;QAfG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,MAAM,GAAG,UAAC,KAAK;gBAClB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACvC,KAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACpD,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,yBAAyB,CAAC;QACrD,CAAC;IACL,CAAC;IAED,6CAAa,GAAb;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChD,IAAI,CAAC,UAAU,GAAG;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI;gBACZ,eAAe,EAAE,IAAI;aACxB,CAAC;QACN,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,sCAAsC,CAAC;QACxE,CAAC;IACL,CAAC;IAED,gDAAgB,GAAhB,UAAiB,IAAI;QACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;IACL,CAAC;IAED,2CAAW,GAAX;QAAA,iBAmCC;QAlCG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;YAC5C,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjE,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;gBACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBACrB,KAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC,EACD,UAAC,GAAG;gBACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,CAAC;gBAAA,CAAC;YACN,CAAC,CAAC;QACN,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9D,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;gBACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBACrB,KAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC,EACD,UAAC,GAAG;gBACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,CAAC;gBAAA,CAAC;YACN,CAAC,CAAC;QACN,CAAC;IACL,CAAC;IA/GQ,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;;SAGhC,CAAC;yCAoBoC,yDAAW,EAAkB,sDAAM,EAAe,2DAAY;OAnBvF,qBAAqB,CAgHjC;IAAD,4BAAC;CAAA;AAhHiC;;;;;;;;;;;;ACVlC,6BAA6B,wBAAwB,8BAA8B,4BAA4B,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,wBAAwB,KAAK,wBAAwB,oBAAoB,wBAAwB,KAAK,oBAAoB,uBAAuB,yBAAyB,gCAAgC,qBAAqB,wBAAwB,yBAAyB,KAAK,gBAAgB,yBAAyB,KAAK,mCAAmC,wBAAwB,KAAK,oBAAoB,8BAA8B,4BAA4B,mBAAmB,yBAAyB,KAAK,qBAAqB,gCAAgC,mBAAmB,oBAAoB,oBAAoB,wBAAwB,qCAAqC,2BAA2B,yBAAyB,KAAK,2BAA2B,8BAA8B,4BAA4B,qBAAqB,qBAAqB,0BAA0B,KAAK,mCAAmC,mBAAmB,oBAAoB,KAAK,yCAAyC,mBAAmB,KAAK,0BAA0B,oBAAoB,oBAAoB,KAAK,mBAAmB,gCAAgC,uBAAuB,oBAAoB,wBAAwB,qCAAqC,2BAA2B,yBAAyB,KAAK,wBAAwB,2BAA2B,2BAA2B,oBAAoB,qBAAqB,0BAA0B,+BAA+B,KAAK,eAAe,mBAAmB,8BAA8B,4BAA4B,KAAK,sBAAsB,mBAAmB,8BAA8B,4BAA4B,wBAAwB,KAAK,yBAAyB,yBAAyB,KAAK,yBAAyB,yBAAyB,KAAK,8BAA8B,yBAAyB,KAAK,kBAAkB,mBAAmB,8BAA8B,4BAA4B,KAAK,uBAAuB,oBAAoB,wBAAwB,qBAAqB,KAAK,C;;;;;;;;;;;ACAn0E,8jRAA8jR,gBAAgB,60BAA60B,sDAAsD,gIAAgI,yBAAyB,qEAAqE,qBAAqB,0IAA0I,aAAa,IAAI,eAAe,sU;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5zT;AACJ;AACW;AAOzD;IASI,+BAAoB,YAAyB,EAAU,MAAsB;QAAzD,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAgB;QAP7E,WAAM,GAAG;YACL,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,IAAI;SACb;IAGD,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAUC;QATG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YACxC,KAAI,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAe,GAAf;QAAA,iBAKC;QAJG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACrD,UAAU,CAAC,SAAS,CAAC,cAAI;YACrB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;IACN,CAAC;IAED,+CAAe,GAAf;QAAA,iBAMC;QALG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChE,UAAU,CAAC,SAAS,CAAC,cAAI;YACrB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC;IACN,CAAC;IArCQ,qBAAqB;QALjC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;;SAGhC,CAAC;yCAUoC,yDAAW,EAAkB,8DAAc;OATpE,qBAAqB,CAuCjC;IAAD,4BAAC;CAAA;AAvCiC;;;;;;;;;;;;ACTlC,4BAA4B,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,wBAAwB,2BAA2B,2BAA2B,oBAAoB,qBAAqB,0BAA0B,+BAA+B,KAAK,eAAe,8BAA8B,mBAAmB,4BAA4B,KAAK,gBAAgB,8BAA8B,4BAA4B,mBAAmB,wBAAwB,KAAK,cAAc,mBAAmB,KAAK,qBAAqB,wBAAwB,KAAK,qBAAqB,uBAAuB,KAAK,C;;;;;;;;;;;ACA5tB,+DAA+D,QAAQ,qLAAqL,mDAAmD,kFAAkF,qBAAqB,yBAAyB,gBAAgB,uDAAuD,iBAAiB,kGAAkG,aAAa,IAAI,eAAe,IAAI,wBAAwB,qvB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnnB;AACO;AACX;AACE;AACP;AAOzC;IAKI,0BAAoB,GAAiB,EAAU,MAAc,EAAU,YAAyB,EAAU,MAAsB;QAA5G,QAAG,GAAH,GAAG,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAgB;QAJhI,SAAI,GAAG,IAAI,CAAC;QACZ,SAAI,GAAG,IAAI,CAAC;QACZ,aAAQ,GAAG,EAAE,CAAC;IAEsH,CAAC;IAErI,mCAAQ,GAAR;QAAA,iBA+BC;QA9BG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YACxC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACf,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACjE,UAAU,CAAC,SAAS,CAAC,cAAI;oBACrB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;oBACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;oBACjC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,GAAG,CAAC,YAAY,CAAC;oBAClC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,UAAU,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC3E,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC/B,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,KAAI,CAAC,IAAI,GAAM,KAAI,CAAC,IAAI,CAAC,YAAY,UAAK,KAAI,CAAC,IAAI,CAAC,IAAI,MAAG,CAAC;oBAChE,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrC,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAc,GAAd;QAAA,iBAMC;QALG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACpD,UAAU,CAAC,SAAS,CAAC,cAAI;YACrB,KAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IA9CQ,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;SAG1B,CAAC;yCAM2B,2DAAY,EAAkB,sDAAM,EAAwB,yDAAW,EAAkB,8DAAc;OALvH,gBAAgB,CA+C5B;IAAD,uBAAC;CAAA;AA/C4B;;;;;;;;;;;;ACX7B,0BAA0B,gCAAgC,uBAAuB,mBAAmB,wBAAwB,qCAAqC,2BAA2B,KAAK,qBAAqB,oBAAoB,2BAA2B,KAAK,C;;;;;;;;;;;ACA1Q,6LAA6L,eAAe,uPAAuP,gBAAgB,8PAA8P,mBAAmB,iRAAiR,0BAA0B,oY;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA79B;AACJ;AACL;AACO;AAOhD;IASI,2BAAoB,YAAyB,EAAU,MAAc,EAAU,GAAiB;QAA5E,iBAAY,GAAZ,YAAY,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAc;QARhG,SAAI,GAAG;YACH,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE,IAAI;SACxB;QACD,WAAM,GAAG,EAAE,CAAC;IAEwF,CAAC;IAErG,oCAAQ,GAAR;IACA,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAeC;QAdG,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;YACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC,EACD,UAAC,GAAG;YACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAAA,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IA7BQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;yCAUoC,yDAAW,EAAkB,sDAAM,EAAe,2DAAY;OATvF,iBAAiB,CA8B7B;IAAD,wBAAC;CAAA;AA9B6B;;;;;;;;;;;;;ACV9B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MusicianFormComponent } from './musician-form/musician-form.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { MusicianListComponent } from './musician-list/musician-list.component';\nimport { GigRequestComponent } from './gig-request/gig-request.component';\nimport { GigListComponent } from './gig-list/gig-list.component';\n\nconst routes: Routes = [\n    { path: \"login\", component: LoginComponent },\n    { path: \"register\", component: RegisterComponent },\n    { path: \"\", component: HomeComponent },\n    { path: \"addMusician\", component: MusicianFormComponent},\n    { path: \"profile\", component: ProfileComponent },\n    { path: \"profile/:id\", component: ProfileComponent },\n    { path: \"musicians/request/:id\", component: GigRequestComponent },\n    { path: \"musicians/:name\", component: MusicianListComponent },\n    { path: \"musicians\", component: MusicianListComponent },\n    { path: \"gigs\", component: GigListComponent },\n    { path: \"gig/:gigId\", component: GigRequestComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".navbar {\\r\\n    background: linear-gradient(#103b48, #446766);\\r\\n}\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\">GigBook</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home</a></li>\\n            <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/musicians']\\\">Browse Musicians</a></li>\\n            <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/gigs']\\\">My Gigs</a></li>\\n            <li *ngIf=\\\"loggedInUser === null\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">My Profile</a></li>\\n            <li *ngIf=\\\"loggedInUser !== null\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">{{ loggedInUser.name }}'s Profile</a></li>\\n        </ul>\\n        <a *ngIf=\\\"loggedInUser === null\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login/Register</a>\\n        <a *ngIf=\\\"loggedInUser !== null\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/addMusician']\\\">Register as a musician</a>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\" (submit)=\\\"filterMusicians()\\\">\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Find Musicians\\\" name=\\\"Name\\\" [(ngModel)]=\\\"Name\\\">\\n            <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    Name = null;\n    title = 'main';\n    loggedInUser = null;\n\n    constructor(private _httpService: HttpService, private router: Router) {\n    }\n\n    getUser() {\n        let observable = this._httpService.getLoggedInUser();\n        observable.subscribe((data) => {\n            this.loggedInUser = data;\n            return data;\n        });\n    };\n\n    filterMusicians() {\n        console.log(this.Name);\n        this.router.navigate([\"/musicians\", this.Name]);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MusicianFormComponent } from './musician-form/musician-form.component';\nimport { MusicianListComponent } from './musician-list/musician-list.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { GigRequestComponent } from './gig-request/gig-request.component';\nimport { GigListComponent } from './gig-list/gig-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    MusicianFormComponent,\n    MusicianListComponent,\n    ProfileComponent,\n    GigRequestComponent,\n    GigListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".gigs {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 70%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"gigs\\\">\\n    <div *ngIf=\\\"user.role == 'Musician'\\\">\\n        <h2>Client Requests</h2>\\n        <hr class=\\\"my-4\\\">\\n        <div *ngFor=\\\"let gig of ClientGigs\\\" class=\\\"gig\\\">\\n            <h3>Gig Request for {{gig.musician.musicianName}}</h3>\\n            <p>Location: {{gig.address}}</p>\\n            <p>Date and Time: {{gig.startTime}}</p>\\n            <p>Payment Offer: ${{gig.amount}}</p>\\n            <p *ngIf=\\\"gig.musicianConfirm && gig.userConfirm && gig.transaction\\\">Status: Confirmed!</p>\\n            <p *ngIf=\\\"gig.musicianConfirm && gig.userConfirm && !gig.transaction\\\">Status: Transaction needed</p>\\n            <div *ngIf=\\\"!gig.musicianConfirm && gig.userConfirm\\\">\\n                <p>Status: Musician approval needed</p>\\n                <a  class=\\\"btn btn-success\\\" [routerLink]=\\\"['/gig', gig.gigId]\\\">Review and approve</a>\\n            </div>\\n            <p *ngIf=\\\"!gig.userConfirm && gig.musicianConfirm\\\">Status: Client approval needed</p>\\n        </div>\\n    </div>\\n\\n    <h2>Your Requests</h2>\\n    <hr class=\\\"my-4\\\">\\n    <p *ngIf=\\\"UserRequests.length == 0\\\">You haven't made any requests yet! Click <a [routerLink]=\\\"['/musicians']\\\">here</a> to find a musicians.</p>\\n    <div *ngFor=\\\"let gig of UserRequests\\\" class=\\\"gig\\\">\\n        <h3>Gig Request for {{gig.musician.musicianName}}</h3>\\n        <p>Location: {{gig.address}}</p>\\n        <p>Date and Time: {{gig.startTime}}</p>\\n        <p>Payment Offer: ${{gig.amount}}</p>\\n        <p *ngIf=\\\"gig.musicianConfirm && gig.userConfirm && gig.transaction\\\">Status: Confirmed!</p>\\n        <p *ngIf=\\\"!gig.musicianConfirm && gig.userConfirm\\\">Status: Musician approval needed</p>\\n        <div *ngIf=\\\"!gig.userConfirm && gig.musicianConfirm\\\">\\n            <p>Status: Client approval needed</p>\\n            <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/gig', gig.gigId]\\\">Review and approve</a>\\n        </div>\\n        <div *ngIf=\\\"gig.musicianConfirm && gig.userConfirm && !gig.transaction\\\">\\n            <p>Status: Transaction needed</p>\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"openCheckout(gig.gigId)\\\">Pay now</button>\\n        </div>\\n    </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { AppComponent } from '../app.component';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-gig-list',\n    templateUrl: './gig-list.component.html',\n    styleUrls: ['./gig-list.component.css']\n})\nexport class GigListComponent implements OnInit {\n    user = null;\n    ClientGigs = [];\n    UserRequests = [];\n\n    constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) { }\n\n    ngOnInit() {\n        this.user = this.app.loggedInUser;\n        this.getGigs();\n    }\n\n    getGigs() {\n        let observable = this._httpService.getMyGigs();\n        observable.subscribe((data) => {\n            console.log(data);\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].userId == this.user.id) {\n                    this.UserRequests.push(data[i]);\n                }\n                else if (data[i].musicianId == this.user.id) {\n                    this.ClientGigs.push(data[i]);\n                }\n            }\n            console.log(this.ClientGigs);\n            console.log(this.UserRequests);\n        });\n    }\n\n    openCheckout(id) {\n        console.log(id);\n        var idx = this.UserRequests.findIndex(x => x.gigId == id);\n        console.log(idx);\n        var handler = (<any>window).StripeCheckout.configure({\n            key: 'pk_test_3cjD0ijDefj5iXqrVtdEGywR',\n            locale: 'auto',\n            token: token => {\n                console.log(token);\n                let observable = this._httpService.approvePayment(this.UserRequests[idx].gigId);\n                observable.subscribe(data => {\n                    this.UserRequests[idx] = data;\n                    console.log(this.UserRequests);\n                });\n            }\n        });\n\n        handler.open({\n                name: 'GigBook',\n                description: 'Gig payment',\n                amount: this.UserRequests[idx].amount * 100\n            });\n    }\n\n}\n","module.exports = \".gig-form {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 70%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"gig-form\\\">\\n    <h2>Gig Request for {{ musician.musicianName }}</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"newGig()\\\">\\n        <span *ngIf=\\\"errors.Address\\\">{{errors.Address}}</span>\\n        <h5>Venue Address</h5>\\n        <p *ngIf=\\\"action == 'Musician Update'\\\">{{Gig.address}}</p>\\n        <div *ngIf=\\\"action != 'Musician Update'\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Street</label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Street\\\" [(ngModel)]=\\\"Address.Street\\\">\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label>City</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"City\\\" [(ngModel)]=\\\"Address.City\\\">\\n                </div>\\n                <div class=\\\"form-group col\\\">\\n                    <label>State</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"State\\\" [(ngModel)]=\\\"Address.State\\\">\\n                </div>\\n                <div class=\\\"form-group col\\\">\\n                    <label>Zip Code</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Zip\\\" [(ngModel)]=\\\"Address.Zip\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Date of Performace</label>\\n            <input *ngIf=\\\"action != 'Musician Update'\\\" class=\\\"form-control\\\" type=\\\"date\\\" name=\\\"Date\\\" [(ngModel)]=\\\"Date\\\">\\n            <p *ngIf=\\\"action == 'Musician Update'\\\">{{ Date }}</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Start Time</label>\\n            <input *ngIf=\\\"action != 'Musician Update'\\\" class=\\\"form-control\\\" type=\\\"time\\\" name=\\\"Time\\\" [(ngModel)]=\\\"StartTime\\\">\\n            <p *ngIf=\\\"action == 'Musician Update'\\\">{{ StartTime }}</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>End Time</label>\\n            <input *ngIf=\\\"action != 'Musician Update'\\\" class=\\\"form-control\\\" type=\\\"time\\\" name=\\\"Time\\\" [(ngModel)]=\\\"EndTime\\\">\\n            <p *ngIf=\\\"action == 'Musician Update'\\\">{{ EndTime }}</p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Payment Offer</label>\\n            <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">$</span>\\n                </div>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Amount\\\" [(ngModel)]=\\\"Gig.amount\\\">\\n            </div>\\n            <small *ngIf=\\\"action != 'Musician Update'\\\" class=\\\"form-text text-muted\\\">This is just an initial offer, the musician will get a chance to negotiate or accept.</small>\\n            <small *ngIf=\\\"action == 'Musician Update'\\\" class=\\\"form-text text-muted\\\">You may increase or decrease the offer, the client will have a chance to negotiate or accept.</small>\\n        </div>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Make Request\\\">\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-gig-request',\n    templateUrl: './gig-request.component.html',\n    styleUrls: ['./gig-request.component.css']\n})\nexport class GigRequestComponent implements OnInit {\n    user = null;\n    musician = null;\n    Address = {\n        Street: null,\n        City: null,\n        State: null,\n        Zip: null\n    }\n    Date = null\n    StartTime = null\n    EndTime = null\n    Gig: any;\n    errors = {};\n    action = \"New\";\n\n    constructor(private _httpService: HttpService, private _route: ActivatedRoute, private router: Router, private app: AppComponent) { }\n\n    ngOnInit() {\n        this.user = this.app.loggedInUser;\n        if (this.user == null) {\n            this.router.navigate(['login']);\n        }\n        this._route.params.subscribe((params: Params) => {\n            if (params['gigId']) {\n                console.log(params['gigId']);\n                parseInt(params['gigId']);\n                let observable = this._httpService.gigById(params['gigId']);\n                observable.subscribe(data => {\n                    this.Gig = data;\n                    console.log(this.Gig);\n                    if (this.Gig.musicianId == this.user.id) {\n                        this.action = \"Musician Update\";\n                    }\n                    else {\n                        this.action = \"Client Update\";\n                    }\n                    console.log(this.action);\n                    this.musician = data['musician'];\n                    this.Date = this.formatDate(data['startTime']);\n                    this.StartTime = this.formatTime(data['startTime']);\n                    this.EndTime = this.formatTime(data['endTime']);\n                });\n            }\n            else {\n                let observable = this._httpService.getMusicianById(params['id']);\n                observable.subscribe(data => {\n                    this.musician = data;\n                    console.log(this.musician);\n                });\n                this.Gig = {\n                    address: null,\n                    startTime: null,\n                    endTime: null,\n                    amount: null\n                }\n            }\n        });\n    }\n\n    newGig() {\n        if (this.action != \"New\") {\n            this.updateGig();\n            return;\n        }\n        console.log(\"Here\");\n        this.Gig.address = `${this.Address.Street} ${this.Address.City}, ${this.Address.State} ${this.Address.Zip}`;\n        this.Gig.startTime = new Date(this.Date + \" \" + this.StartTime);\n        this.Gig.endTime = new Date(this.Date + \" \" + this.EndTime);\n        console.log(this.Gig.startTime);\n        console.log(this.Gig.endTime);\n        let observable = this._httpService.addGig(this.musician.id, this.Gig);\n        observable.subscribe((data) => {\n            console.log(data);\n            if (data['gigId'] != null) {\n                this.router.navigate(['/gigs']);\n            }\n        },\n        (err) => {\n            let errors = Object.keys(err['error']);\n            for (let i = 0; i < errors.length; i++) {\n                this.errors[errors[i]] = err['error'][errors[i]][0];\n            }; \n        })\n    }\n\n    updateGig() {\n        let observable = this._httpService.updateGig(this.Gig);\n        observable.subscribe(data => {\n            console.log(data);\n            this.router.navigate(['/gigs'])\n        })\n    }\n\n    formatTime(time) {\n        var x = new Date(time);\n        var h = x.getHours();\n        var m = x.getMinutes();\n        if (m < 10) {\n            var ms = \"0\" + m;\n        }\n        else {\n            var ms = m.toString();\n        }\n        if (this.action == \"Musician Update\") {\n            var h = h % 12;\n        }\n        return h + \":\" + ms;\n    }\n\n    formatDate(date) {\n        var x = new Date(date);\n        var y = x.getFullYear();\n        var m = x.getMonth();\n        var d = x.getDate();\n        if (m < 10) {\n            var ms = \"0\" + m;\n        }\n        else {\n            var ms = m.toString();\n        }\n        if (d < 10) {\n            var ds = \"0\" + d;\n        }\n        else {\n            var ds = d.toString();\n        }\n        if (this.action != \"Musician Update\") {\n            return y + '-' + ms + '-' + ds;    \n        }\n        else {\n            return ms + '/' + ds + '/' + y;\n        }\n    }\n}\n","module.exports = \"img {\\r\\n    width: 40%;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    width: 50%;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    text-align: right;\\r\\n    margin-top: 10%;\\r\\n}\\r\\n\\r\\n.title h1 {\\r\\n    font-size: 4.5rem;\\r\\n}\\r\\n\\r\\n.title p {\\r\\n    font-size: 1.8rem;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    padding: 10% 0;\\r\\n}\\r\\n\\r\\n.info {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 40%;\\r\\n    padding: 5%;\\r\\n}\\r\\n\\r\\n.btn-primary {\\r\\n    margin-right: 5%;\\r\\n}\"","module.exports = \"<img src=\\\"assets/img/music-instruments.png\\\">\\n<div class=\\\"title\\\">\\n    <h1 class=\\\"display-4\\\">Welcome to GigBook!</h1>\\n    <p class=\\\"lead\\\">The popular booking site for hiring musicians</p>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['register']\\\">Get Started</a>\\n    <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['musicians']\\\">Hire a Musician</a>\\n</div>\\n\\n<!-- <h2>Featured Musicians:</h2> -->\\n<!-- A list of musicians that are just starting out -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n    constructor(private _http: HttpClient) { }\n\n    // user routes\n    loginUser(user) {\n        console.log(\"In service\");\n        return this._http.post(\"/users/Login\", user);\n    }\n\n    registerUser(user) {\n        return this._http.post(\"/users\", user);\n    }\n\n    getLoggedInUser() {\n        return this._http.get(\"/users/loggedIn\");\n    }\n\n    addMusician(musician) {\n        return this._http.post(\"/musicians\", musician);\n    }\n\n    getMusicianById(id) {\n        return this._http.get(\"/musicians/\" + id);\n    }\n\n    getAllMusicians() {\n        return this._http.get(\"/musicians\");\n    }\n\n    filterMusicians(filter) {\n        return this._http.post(\"/musicians/filter\", filter);\n    }\n\n    updateMusician(musician) {\n        return this._http.put(\"/musicians\", musician);\n    }\n\n    addGig(id, gig) {\n        console.log(id, gig, \"Here\");\n        return this._http.post(\"/gigs/\" + id, gig);\n    }\n\n    updateGig(gig) {\n        return this._http.post(\"/gigs/update\", gig);\n    }\n\n    gigById(id) {\n        return this._http.get(\"/gigs/\" + id);\n    }\n\n    getMyGigs() {\n        return this._http.get(\"/gigs\");\n    }\n\n    approvePayment(id) {\n        return this._http.get(\"/gigs/payment/\" + id);\n    }\n\n    deleteMusician() {\n        return this._http.get(\"/musicians/delete\");\n    }\n}\n","module.exports = \".login {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 35%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.login .btn {\\r\\n    width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container login\\\">\\n    <h2>Login</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"Login()\\\">\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.loginError\\\">{{errors.loginError}}</span>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Email\\\">{{errors.Email}}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"Email\\\" [(ngModel)]=\\\"login.email\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Password\\\">{{errors.Password}}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"Password\\\" [(ngModel)]=\\\"login.password\\\">\\n            <small class=\\\"form-text text-muted\\\"><a>Forgot your password?</a></small>\\n        </div>\\n        <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Log in\\\">\\n    </form>\\n    <a [routerLink]=\\\"['/register']\\\">Need to register?</a>\\n</div>\"","import { Component, OnInit, Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    login = {\n        Email: null,\n        Password: null\n    };\n    errors = {};\n\n    constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) {\n    }\n\n    ngOnInit() {\n    }\n\n    Login() {\n        console.log(this.login);\n        let observable = this._httpService.loginUser(this.login);\n        observable\n            .subscribe((data) => {\n                console.log(data);\n                this.app.getUser();\n                this.router.navigate([\"\"]);\n            },\n            (err) => {\n                console.log(err['error']);\n                let errors = Object.keys(err['error']);\n                for (let i = 0; i < errors.length; i++) {\n                    this.errors[errors[i]] = err['error'][errors[i]][0];\n                };\n                console.log(this.errors);\n            });\n    }\n}\n","module.exports = \".newMusician {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 70%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.imageUpload {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    width: 40%;\\r\\n    padding: 3% 5%;\\r\\n}\\r\\n\\r\\n.image-cropper {\\r\\n    position: relative;\\r\\n    border-radius: 50%;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    padding-top: 100%;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.formInfo {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 60%;\\r\\n    padding: 3% 0% 3% 5%;\\r\\n}\\r\\n\\r\\na.btn-success {\\r\\n    color: white;\\r\\n    height: auto;\\r\\n    line-height: 2;\\r\\n    margin-top: 3vh;\\r\\n}\\r\\n\\r\\na.btn-success:hover {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.Instrument p {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 60%;\\r\\n}\\r\\n\\r\\n.Instrument img {\\r\\n    height: 2vh;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.Instrument img:hover {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"container newMusician\\\">\\n    <h2>Register as a Musician</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"AddMusician()\\\">\\n        <div class=\\\"imageUpload\\\">\\n            <h3>Add a Profile Picture</h3>\\n            <div class=\\\"image-cropper\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + ImageUrl + ')' }\\\"></div>\\n            <label>Upload an image:</label>\\n            <span *ngIf=\\\"errors.Image\\\" class=\\\"error\\\">{{ errors.Image }}</span>\\n            <div class=\\\"input-group\\\">\\n                <label class=\\\"input-group-btn\\\">\\n                    <span class=\\\"btn btn-warning\\\">\\n                        Browse&hellip; <input type=\\\"file\\\" style=\\\"display: none;\\\" multiple name=\\\"ImageUrl\\\" [(ngModel)]=\\\"Musician.ImageUrl\\\" (change)=\\\"UpdateImage($event)\\\">\\n                    </span>\\n                </label>\\n                <input *ngIf=\\\"ImageUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" readonly name=\\\"ImageUrl\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"formInfo\\\">\\n            <span class=\\\"error\\\" *ngIf=\\\"errors.Name\\\">{{ errors.Name }}</span>\\n            <div class=\\\"form-group\\\">\\n                <label>Name</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" [(ngModel)]=\\\"Musician.Name\\\">\\n            </div>\\n            <span class=\\\"error\\\" *ngIf=\\\"errors.Summary\\\">{{ errors.Email }}</span>\\n            <div class=\\\"form-group\\\">\\n                <label>Summary</label>\\n                <textarea class=\\\"form-control\\\" name=\\\"Summary\\\" [(ngModel)]=\\\"Musician.Summary\\\"></textarea>\\n            </div>\\n            <span class=\\\"error\\\" *ngIf=\\\"errors.Location\\\">{{ errors.Location }}</span>\\n            <div class=\\\"form-group\\\">\\n                <label>Location</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Location\\\" [(ngModel)]=\\\"Musician.Location\\\">\\n            </div>\\n            <h4>Add Instruments:</h4>\\n            <span class=\\\"error\\\" *ngIf=\\\"errors.Instruments\\\">{{ errors.Instruments }}</span>\\n            <div *ngFor=\\\"let instrument of Musician.Instruments\\\" class=\\\"Instrument\\\">\\n                <p>{{instrument.name}}, {{instrument.family}}: {{ instrument.yearsExperience }} years</p><img src=\\\"https://cdn0.iconfinder.com/data/icons/basic-ui-elements-plain/385/010_x-512.png\\\" (click)=\\\"DeleteInstrument(instrument)\\\">\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label>Name</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"InstrumentName\\\" [(ngModel)]=\\\"Instrument.name\\\" placeholder=\\\"Name\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label>Family</label>\\n                    <select class=\\\"form-control\\\" name=\\\"InstrumentFamily\\\" [(ngModel)]=\\\"Instrument.family\\\" placeholder=\\\"Family\\\">\\n                        <option value=\\\"Woodwind\\\">Woodwind</option>\\n                        <option value=\\\"Brass\\\">Brass</option>\\n                        <option value=\\\"Percussion\\\">Percussion</option>\\n                        <option value=\\\"String\\\">String</option>\\n                        <option value=\\\"Keyboard\\\">Keyboard</option>\\n                        <option value=\\\"Vocal\\\">Vocal</option>\\n                        <option value=\\\"Other\\\">Other</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label>Years of Experience</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"YearsExperience\\\" [(ngModel)]=\\\"Instrument.yearsExperience\\\" placeholder=\\\"Years of Experience\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-1\\\">\\n                    <a class=\\\"btn btn-success\\\" (click)=\\\"AddInstrument()\\\">Add</a>\\n                </div>\\n            </div>\\n            <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"{{ action }}\\\">\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-musician-form',\n    templateUrl: './musician-form.component.html',\n    styleUrls: ['./musician-form.component.css']\n})\nexport class MusicianFormComponent implements OnInit {\n    ImageUrl = \"http://www.epsomps.vic.edu.au/wp-content/uploads/2016/09/512x512-1-300x300.png\";\n    Musician = {\n        Name: null,\n        Summary: null,\n        Location: null,\n        ImageUrl: null,\n        Instruments: []\n    }\n    Instrument = {\n        name: null,\n        family: null,\n        yearsExperience: null\n    }\n    urlReg = /()\\w+(\\.)+(jpg|png|jpeg|JPG|JPEG|PNG)/;\n    urlMessage = null;\n    errors = {};\n    action = \"Register\";\n\n    constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) { }\n\n    ngOnInit() {\n        if (this.app.loggedInUser.role === \"Musician\") {\n            this.Musician.Name = this.app.loggedInUser.musicianName;\n            this.Musician.Summary = this.app.loggedInUser.summary;\n            this.Musician.Location = this.app.loggedInUser.location;\n            this.Musician.ImageUrl = this.app.loggedInUser.imageUrl;\n            this.Musician.Instruments = this.app.loggedInUser.instruments;\n            this.ImageUrl = this.app.loggedInUser.imageUrl;\n            this.action = \"Update\";\n        }\n        else {\n            this.Musician.Name = this.app.loggedInUser.name;\n        }\n    }\n\n    UpdateImage(event) {\n        console.log(\"HERE!\");\n        if (this.urlReg.test(this.Musician.ImageUrl)) {\n            console.log(\"Good\");\n            console.log(event)\n            var reader = new FileReader();\n            reader.readAsDataURL(event.target.files[0]);\n            reader.onload = (event) => {\n                this.ImageUrl = event.target['result'];\n                this.Musician.ImageUrl = event.target['result'];\n            }\n        }\n        else {\n            console.log(\"Invalid\");\n            this.errors['Image'] = \"Not a valid image file.\";\n        }\n    }\n\n    AddInstrument() {\n        if (this.Instrument.name !== null && this.Instrument.family !== null) {\n            this.Musician.Instruments.push(this.Instrument);\n            this.Instrument = {\n                name: null,\n                family: null,\n                yearsExperience: null\n            };\n        }\n        else {\n            this.errors['Instruments'] = \"Name and Family fields are required.\";\n        }\n    }\n\n    DeleteInstrument(data) {\n        for (let i = 0; i < this.Musician.Instruments.length; i++) {\n            if (this.Musician.Instruments[i] === data) {\n                this.Musician.Instruments.splice(i, 1);\n            }\n        }\n    }\n\n    AddMusician() {\n        if (this.app.loggedInUser.role === \"Musician\") {\n            let observable = this._httpService.updateMusician(this.Musician);\n            observable.subscribe((data) => {\n                console.log(data);\n                if (data['id'] != null) {\n                    this.app.loggedInUser = data;\n                    this.router.navigate([\"/profile\"]);\n                }\n            },\n            (err) => {\n                console.log(err['error']);\n                let errors = Object.keys(err['error']);\n                for (let i = 0; i < errors.length; i++) {\n                    this.errors[errors[i]] = err['error'][errors[i]][0];\n                }; \n            })\n        }\n        else {\n            let observable = this._httpService.addMusician(this.Musician);\n            observable.subscribe((data) => {\n                console.log(data);\n                if (data['id'] != null) {\n                    this.app.loggedInUser = data;\n                    this.router.navigate([\"/profile\"]);\n                }\n            },\n            (err) => {\n                console.log(err['error']);\n                let errors = Object.keys(err['error']);\n                for (let i = 0; i < errors.length; i++) {\n                    this.errors[errors[i]] = err['error'][errors[i]][0];\n                }; \n            })\n        }\n    }\n}\n","module.exports = \".side-bar {\\r\\n    position: fixed;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 20%;\\r\\n    margin: 3% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n    margin-left: 5%;\\r\\n}\\r\\n\\r\\n.side-bar .btn {\\r\\n    width: 100%;\\r\\n    margin-top: 10%;\\r\\n}\\r\\n\\r\\n.accordion {\\r\\n    display: block;\\r\\n    text-align: left;\\r\\n    background-color: white;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n    transition: 0.4s;\\r\\n}\\r\\n\\r\\n.panel {\\r\\n    position: hidden;\\r\\n}\\r\\n\\r\\n.active, .accordian:hover {\\r\\n    color: darkgray;\\r\\n}\\r\\n\\r\\n.musicians {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 60%;\\r\\n    margin-left: 25%;\\r\\n}\\r\\n\\r\\n.search-bar {\\r\\n    background-color: white;\\r\\n    padding: 0;\\r\\n    width: 100%;\\r\\n    height: 7vh;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n    margin-left: 15%;\\r\\n}\\r\\n\\r\\n.search-bar input {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    border: none;\\r\\n    height: 100%;\\r\\n    font-size: 1.4rem;\\r\\n}\\r\\n\\r\\n.search-bar .form-control {\\r\\n    width: 80%;\\r\\n    height: 7vh;\\r\\n}\\r\\n\\r\\n.search-bar .input-group-append {\\r\\n    width: 20%;\\r\\n}\\r\\n\\r\\n.search-bar .btn {\\r\\n    height: 7vh;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.musician {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 100%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n    margin-left: 15%;\\r\\n}\\r\\n\\r\\n.image-cropper {\\r\\n    position: relative;\\r\\n    border-radius: 50%;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    padding-top: 100%;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.left {\\r\\n    width: 25%;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.description {\\r\\n    width: 60%;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    padding: 2% 10%;\\r\\n}\\r\\n\\r\\n.description ul {\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.description h5 {\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.description .offset {\\r\\n    margin-left: 10%;\\r\\n}\\r\\n\\r\\n.actions {\\r\\n    width: 15%;\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.actions .btn {\\r\\n    width: 100%;\\r\\n    margin-top: 25%;\\r\\n    color: white;\\r\\n}\"","module.exports = \"<div class=\\\"side-bar\\\">\\n    <h3>Filter Musicians</h3>\\n    <form (submit)=\\\"filterMusicians()\\\">\\n        <h5>Location</h5>\\n        <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Chicago\\\">\\n            <label>Chicago</label>\\n        </div>\\n        <div class=\\\"form-check\\\">\\n            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"New York\\\">\\n            <label>New York</label>\\n        </div>\\n        <h5>Instrument</h5>\\n        <button type=\\\"button\\\" class=\\\"accordion\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#woodwinds\\\">Woodwinds<span>+</span></button>\\n        <div class=\\\"panel collapse\\\" id=\\\"woodwinds\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"All\\\">\\n                <label>All</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Flute\\\">\\n                <label>Flute</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Clarinet\\\">\\n                <label>Clarinet</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Oboe\\\">\\n                <label>Oboe</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Bassoon\\\">\\n                <label>Bassoon</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Saxophone\\\">\\n                <label>Saxophone</label>\\n            </div>\\n        </div>\\n\\n        <button type=\\\"button\\\" class=\\\"accordion\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#brass\\\">Brass<span>+</span></button>\\n        <div class=\\\"panel collapse\\\" id=\\\"brass\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"All\\\">\\n                <label>All</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Trumpet\\\">\\n                <label>Trumpet</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Trombone\\\">\\n                <label>Trombone</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Horn\\\">\\n                <label>Horn</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Tuba\\\">\\n                <label>Tuba</label>\\n            </div>\\n        </div>\\n\\n        <button type=\\\"button\\\" class=\\\"accordion\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#percussion\\\">Percussion<span>+</span></button>\\n        <div class=\\\"panel collapse\\\" id=\\\"percussion\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"All\\\">\\n                <label>All</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Marimba\\\">\\n                <label>Marimba</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Timpani\\\">\\n                <label>Timpani</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Auxiliary\\\">\\n                <label>Aux.</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Drumset\\\">\\n                <label>Drumset</label>\\n            </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"accordion\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#strings\\\">Strings<span>+</span></button>\\n        <div class=\\\"panel collapse\\\" id=\\\"strings\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"All\\\">\\n                <label>All</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Violin\\\">\\n                <label>Violin</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Viola\\\">\\n                <label>Viola</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Cello\\\">\\n                <label>Cello</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"String Bass\\\">\\n                <label>String Bass</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Accoustic Guitar\\\">\\n                <label>Accoustic Guitar</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Electric Guitar\\\">\\n                <label>Electric Guitar</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Banjo\\\">\\n                <label>Banjo</label>\\n            </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"accordion\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#keyboard\\\">Keyboard<span>+</span></button>\\n        <div class=\\\"panel collapse\\\" id=\\\"keyboard\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"All\\\">\\n                <label>All</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Piano\\\">\\n                <label>Piano</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Organ\\\">\\n                <label>Organ</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Synthesizer\\\">\\n                <label>Synthesizer</label>\\n            </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"accordion\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#vocal\\\">Vocal<span>+</span></button>\\n        <div class=\\\"panel collapse\\\" id=\\\"vocal\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"All\\\">\\n                <label>All</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Soprano\\\">\\n                <label>Soprano</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Alto\\\">\\n                <label>Alto</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Tenor\\\">\\n                <label>Tenor</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Bass\\\">\\n                <label>Bass</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Jazz\\\">\\n                <label>Jazz</label>\\n            </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"accordion\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#other\\\">Other<span>+</span></button>\\n        <div class=\\\"panel collapse\\\" id=\\\"other\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"All\\\">\\n                <label>All</label>\\n            </div>\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"Conductor\\\">\\n                <label>Conductor</label>\\n            </div>\\n        </div>\\n        <h5>Years of Experience</h5>\\n        <div class=\\\"slidecontainer\\\">\\n            <p>Over {{ Filter.years }} year(s):</p>\\n            <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"25\\\" class=\\\"slider\\\" name=\\\"Years\\\" [(ngModel)]=\\\"Filter.years\\\">\\n        </div>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-warning\\\" value=\\\"Filter\\\">\\n    </form>\\n</div>\\n<div class=\\\"musicians\\\">\\n    <form class=\\\"search-bar\\\" (submit)=\\\"filterMusicians()\\\">\\n        <div class=\\\"input-group mb-3\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search by name...\\\" name=\\\"Name\\\" [(ngModel)]=\\\"Filter.name\\\">\\n            <div class=\\\"input-group-append\\\">\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Search\\\">\\n            </div>\\n        </div>\\n    </form>\\n    <div *ngFor=\\\"let musician of Musicians\\\" class=\\\"musician\\\">\\n        <div class=\\\"left\\\">\\n            <div class=\\\"image-cropper\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + musician.imageUrl + ')'}\\\"></div>\\n        </div>\\n        <div class=\\\"description\\\">\\n            <h2><a [routerLink]=\\\"['/profile', musician.id]\\\">{{ musician.musicianName }}</a></h2>\\n            <div class=\\\"offset\\\">\\n                <h5>{{ musician.location }}</h5>\\n                <h5>Instruments:</h5>\\n                <ul>\\n                    <li *ngFor=\\\"let inst of musician.instruments\\\">{{ inst.name }}, {{ inst.family }}</li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div class=\\\"actions\\\">\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['message', musician.id]\\\">Message</a>\\n            <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['request', musician.id]\\\">Request</a>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n    selector: 'app-musician-list',\n    templateUrl: './musician-list.component.html',\n    styleUrls: ['./musician-list.component.css']\n})\nexport class MusicianListComponent implements OnInit {\n    Musicians: any;\n    Filter = {\n        location: null,\n        instruments: [],\n        years: 1,\n        name: null\n    }\n\n    constructor(private _httpService: HttpService, private _route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._route.params.subscribe((params: Params) => {\n            this.Filter.name = params['name'];\n            if (this.Filter.name) {\n                this.filterMusicians();\n            }\n            else {\n                this.getAllMusicians();\n            }\n        });\n    }\n\n    getAllMusicians() {\n        let observable = this._httpService.getAllMusicians();\n        observable.subscribe(data => {\n            this.Musicians = data;\n        })\n    }\n\n    filterMusicians() {\n        console.log(this.Filter);\n        let observable = this._httpService.filterMusicians(this.Filter);\n        observable.subscribe(data => {\n            this.Musicians = data;\n        })\n    }\n\n}\n","module.exports = \".profile {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 70%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.image-cropper {\\r\\n    position: relative;\\r\\n    border-radius: 50%;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    padding-top: 100%;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n.left {\\r\\n    display: inline-block;\\r\\n    width: 35%;\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.right {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    width: 65%;\\r\\n    padding: 2% 10%;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    width: 35%;\\r\\n}\\r\\n\\r\\n.btn-danger {\\r\\n    margin-left: 5%;\\r\\n}\\r\\n\\r\\n.text-muted {\\r\\n    display: block;\\r\\n}\"","module.exports = \"<div class=\\\"container profile\\\">\\n    <h2>{{ name }}</h2>\\n    <hr class=\\\"my-4\\\">\\n    <div *ngIf='user.role === \\\"Musician\\\"' class=\\\"musician\\\">\\n        <div class=\\\"left\\\">\\n            <div class=\\\"image-cropper\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + user.imageUrl + ')' }\\\"></div>\\n        </div>\\n        <div class=\\\"right\\\">\\n            <h4>About {{ user.musicianName }}:</h4>\\n            <p>{{ user.summary }}</p>\\n            <h4>Location:</h4>\\n            <p>{{ user.location }}</p>\\n            <h4>Instruments:</h4>\\n            <p *ngFor=\\\"let inst of user.instruments\\\">{{ inst.name }}, {{ inst.family }} ({{ inst.yearsExperience }} years of experience)</p>\\n            <a *ngIf=\\\"currUser.id == user.id\\\" class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/addMusician']\\\">Edit</a>\\n            <button *ngIf=\\\"currUser.id == user.id\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteMusician()\\\">Delete Profile</button>\\n            <small *ngIf=\\\"currUser.id == user.id\\\" class=\\\"text-muted\\\">If you delete your musician profile, your login information and user information will be saved.</small>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"user.role != 'Musician'\\\">\\n        <p>You are not registered as a musician. Click <a [routerLink]=\\\"['/addMusician']\\\">here</a> to register as a musician now or <a href=\\\"['/addMusicians']\\\">here</a> to browse all current musicians</p>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { HttpService } from '../http.service';\nimport { AppComponent } from '../app.component';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n    name = null;\n    user = null;\n    currUser = {};\n\n    constructor(private app: AppComponent, private router: Router, private _httpService: HttpService, private _route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this.currUser = this.app.loggedInUser;\n        if (this.currUser == null) {\n            this.currUser = {};\n            this.currUser['id'] = 0;\n        }\n        this._route.params.subscribe((params: Params) => {\n            if (params['id']) {\n                let observable = this._httpService.getMusicianById(params['id']);\n                observable.subscribe(data => {\n                    this.user = data;\n                    this.name = data['musicianName'];\n                    console.log(this.user);\n                });\n            }\n            else {\n                console.log(this.app.loggedInUser);\n                if (this.app.loggedInUser !== null) {\n                    this.user = this.app.loggedInUser;\n                    if (this.user.role != \"Musician\" || this.user.name == this.user.musicianName) {\n                        this.name = this.user.name;\n                    }\n                    else {\n                        this.name = `${this.user.musicianName} (${this.user.name})`;\n                    }\n                }\n                else {\n                    this.router.navigate([\"/login\"]);\n                }\n            }\n        });\n    }\n\n    deleteMusician() {\n        let observable = this._httpService.deleteMusician();\n        observable.subscribe(data => {\n            this.app.loggedInUser = data;\n            this.router.navigate([\"/\"]);\n        })\n    }\n}\n","module.exports = \".login {\\r\\n    background-color: white;\\r\\n    padding: 3% 5%;\\r\\n    width: 35%;\\r\\n    margin: 5% auto;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.login .btn {\\r\\n    width: 100%;\\r\\n    margin-bottom: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"container login\\\">\\n    <h2>Register</h2>\\n    <hr class=\\\"my-4\\\">\\n    <form (submit)=\\\"Register()\\\">\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Name\\\">{{ errors.Name }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" [(ngModel)]=\\\"user.Name\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Email\\\">{{ errors.Email }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"Email\\\" [(ngModel)]=\\\"user.Email\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.Password\\\">{{ errors.Password }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"Password\\\" [(ngModel)]=\\\"user.Password\\\">\\n        </div>\\n        <span class=\\\"error\\\" *ngIf=\\\"errors.ConfirmPassword\\\">{{ errors.ConfirmPassword }}</span>\\n        <div class=\\\"form-group\\\">\\n            <label>Confirm Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"ConfirmPassword\\\" [(ngModel)]=\\\"user.ConfirmPassword\\\">\\n        </div>\\n        <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"Register\\\">\\n    </form>\\n    <a [routerLink]=\\\"['/login']\\\">Already registered?</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    user = {\n        Name: null,\n        Email: null,\n        Password: null,\n        ConfirmPassword: null\n    }\n    errors = {};\n\n    constructor(private _httpService: HttpService, private router: Router, private app: AppComponent) { }\n\n    ngOnInit() {\n    }\n\n    Register() {\n        let observable = this._httpService.registerUser(this.user);\n        observable.subscribe((data) => {\n            console.log(data);\n            this.app.getUser();\n            this.router.navigate([\"/\"]);\n        },\n        (err) => {\n            console.log(err['error']);\n            let errors = Object.keys(err['error']);\n            for (let i = 0; i < errors.length; i++) {\n                this.errors[errors[i]] = err['error'][errors[i]][0];\n            };\n            console.log(this.errors);\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}